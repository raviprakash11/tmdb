{"version":3,"file":"static/js/267.0503a4f3.chunk.js","mappings":"6MAyBaA,GAAWC,EAAAA,EAAAA,IAnBS,SAAH,GAA8C,IAAxCC,EAAgB,EAAhBA,iBAAkBC,EAAc,EAAdA,eAClD,OACI,iBAAKC,UAAU,gBAAe,WAC1B,0BAAI,oBAAgB,kBAAM,mCAC1B,kBAAMA,UAAU,YAAYC,SAAUH,EAAiB,WACnD,iBAAKE,UAAU,aAAY,WAAC,kBAAOE,QAAQ,GAAGF,UAAU,aAAY,SAAC,UAAY,kBAAOG,KAAK,OAAOH,UAAU,eAAeI,YAAY,iBAAiBC,KAAK,OAAOC,SAAU,kBAAMP,GAAgB,QACtM,iBAAKC,UAAU,aAAY,WAAC,kBAAOE,QAAQ,GAAGF,UAAU,aAAY,SAAC,cAAgB,kBAAOG,KAAK,QAAQH,UAAU,eAAeI,YAAY,gBAAgBC,KAAK,QAAQC,SAAUP,QACrL,iBAAKC,UAAU,aAAY,WAAC,kBAAOE,QAAQ,GAAGF,UAAU,aAAY,SAAC,cAAgB,kBAAOG,KAAK,WAAWH,UAAU,eAAeI,YAAY,sBAAsBC,KAAK,WAAWC,SAAUP,QACjM,gBAAKC,UAAU,aAAY,UACvB,mBAAQG,KAAK,SAASH,UAAU,SAAQ,SAAC,gBAE7C,gBAAKA,UAAU,aAAY,UACvB,yBAAG,wBAAoB,SAAC,KAAI,CAACO,GAAI,SAAUP,UAAU,SAAQ,SAAC,oBAKlF,GAE4D,CAAEQ,MAAO,GAAIC,SAAU,GAAIJ,KAAM,IAAKK,EAAAA,G,gICrBrFb,EAAmB,SAACc,EAAWC,EAASC,GAEjD,OAAO,WACH,MAAwBC,EAAAA,SAAeF,GAAQ,eAAxCG,EAAI,KAAEC,EAAO,KACdC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAWjB,OAAQ,SAACT,EAAS,CAACZ,eATI,SAACsB,GACpBL,GAAQ,kBAAKD,GAAI,cAAGM,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,QACjD,EAOmDzB,iBAL1B,SAACuB,GACtBA,EAAEG,iBACFP,EAASJ,EAAWE,EAAMI,GAC9B,GAGJ,CACJ,C","sources":["components/register/Register.jsx","hoc/auth.hoc.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { registerUser } from \"../../app/auth/auth.slice\";\r\nimport { withAuthHandlers } from \"../../hoc/auth.hoc\";\r\n\r\nexport const RegisterComponent = ({ handleFormSubmit, handleOnChange }) => {\r\n    return (\r\n        <div className=\"auth register\">\r\n            <h2>Welcome to TMDB <br /> Get started with an account</h2>\r\n            <form className=\"auth-form\" onSubmit={handleFormSubmit}>\r\n                <div className=\"form-group\"><label htmlFor=\"\" className=\"form-label\">Name</label><input type=\"text\" className=\"form-control\" placeholder=\"Your full name\" name=\"name\" onChange={() => handleOnChange()} /></div>\r\n                <div className=\"form-group\"><label htmlFor=\"\" className=\"form-label\">Username</label><input type=\"email\" className=\"form-control\" placeholder=\"Your email id\" name=\"email\" onChange={handleOnChange} /></div>\r\n                <div className=\"form-group\"><label htmlFor=\"\" className=\"form-label\">Password</label><input type=\"password\" className=\"form-control\" placeholder=\"Set secure password\" name=\"password\" onChange={handleOnChange} /></div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"button\">Register</button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Already reigstered? <Link to={'/login'} className='button'>Login</Link></p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Register = withAuthHandlers(RegisterComponent, { email: '', password: '', name: ''}, registerUser);","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const withAuthHandlers = (Component, userObj, authAction) => {\r\n\r\n    return () => {\r\n        const [user, setUser] = React.useState(userObj)\r\n        const dispatch = useDispatch();\r\n        const navigate = useNavigate();\r\n\r\n        const handleOnChange = (e) => {\r\n            setUser({ ...user, [e.target.name]: e.target.value });\r\n        }\r\n\r\n        const handleFormSubmit = (e) => {\r\n            e.preventDefault();\r\n            dispatch(authAction(user, navigate));\r\n        }\r\n\r\n        return (<Component handleOnChange={handleOnChange} handleFormSubmit={handleFormSubmit} />)\r\n    }\r\n}"],"names":["Register","withAuthHandlers","handleFormSubmit","handleOnChange","className","onSubmit","htmlFor","type","placeholder","name","onChange","to","email","password","registerUser","Component","userObj","authAction","React","user","setUser","dispatch","useDispatch","navigate","useNavigate","e","target","value","preventDefault"],"sourceRoot":""}